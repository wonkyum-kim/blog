html,
body {
  width: 100%;
  min-height: 100dvh;
  margin: 0px;
  padding: 0px;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  box-sizing: border-box;
  overflow-x: hidden;
}

body {
  padding-top: 25px;
  word-break: keep-all;
  overflow-wrap: break-word;
}

@media (width < 768px) {
  body {
    padding-top: 0px;
  }
}

thead {
  border-block-end: 2px solid;
  background: whitesmoke;
}

table {
  display: table;
  border-spacing: 2px;
  border-collapse: collapse;
  box-sizing: border-box;
  text-indent: 0;
  margin-bottom: 1rem;
}

th,
td {
  border: 1px solid lightgrey;
  padding: 0.25rem 0.75rem;
}

:root {
  --gray-50: rgb(249 250 251);
  --gray-200: rgb(229 231 235);
  --gray-300: rgb(209 213 219);
  --orange-500: rgb(249 115 22);
  --orange-600: rgb(234 88 12);
  --orange-700: rgb(194 65 12);
  --green-400: rgb(74 222 128);
}

blockquote {
  background-color: var(--gray-200);
  padding: 1rem;
  border-radius: 0.5rem;
  margin: 0;
  border-left-color: var(--orange-500);
  border-left-width: 0.5rem;
  border-left-style: solid;
}

span.katex-html {
  display: none;
}

::view-transition-old(root),
::view-transition-new(root) {
  animation-duration: 0.3s;
}

.background-radish {
  background-color: #fbe2e3;
  position: absolute;
  top: -6rem;
  z-index: -10;
  right: 11rem;
  height: 31.25rem;
  width: 31.25rem;
  border-radius: 9999px;
  filter: blur(10rem);
}

.background-blue {
  background-color: #dbd7fb;
  position: absolute;
  top: -6rem;
  z-index: -10;
  left: -35rem;
  height: 31.25rem;
  width: 50rem;
  border-radius: 9999px;
  filter: blur(10rem);
}

pre {
  border-radius: 0 0 10px 10px;
  margin-top: 0 !important;
  display: none;
  padding-bottom: 24px !important;
}

nav + pre {
  display: block;
}

h2,
h1 {
  margin-top: 5rem;
}

li::marker {
  color: #cbd5e1;
}

li {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

/* 중간 강조 */
:is(p, li, td) > code {
  padding: 2px 4px;
  background-color: #f3f4f6;
  font-size: 1rem;
  color: #ec4899;
  font-weight: 600;
  border-radius: 5px;
}

/* svg transition */
path {
  transition-duration: 0.3s;
}

/* 스크롤바 없애기 */
* {
  scrollbar-width: none;
}

/* theme */

code[class*='language-'],
pre[class*='language-'] {
  color: #d6deeb;
  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;
  font-size: 1em;

  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

pre[class*='language-']::-moz-selection,
pre[class*='language-'] ::-moz-selection,
code[class*='language-']::-moz-selection,
code[class*='language-'] ::-moz-selection {
  text-shadow: none;
  background: rgba(29, 59, 83, 0.99);
}

pre[class*='language-']::selection,
pre[class*='language-'] ::selection,
code[class*='language-']::selection,
code[class*='language-'] ::selection {
  text-shadow: none;
  background: rgba(29, 59, 83, 0.99);
}

@media print {
  code[class*='language-'],
  pre[class*='language-'] {
    text-shadow: none;
  }
}

/* Code blocks */
pre[class*='language-'] {
  padding: 1em;
  margin: 0.5em 0;
  overflow: auto;
}

:not(pre) > code[class*='language-'],
pre[class*='language-'] {
  color: white;
  background: #011627;
}

:not(pre) > code[class*='language-'] {
  padding: 0.1em;
  border-radius: 0.3em;
  white-space: normal;
}

.token.comment,
.token.prolog,
.token.cdata {
  color: rgb(99, 119, 119);
  font-style: italic;
}

.token.punctuation {
  color: rgb(199, 146, 234);
}

.namespace {
  color: rgb(178, 204, 214);
}

.token.deleted {
  color: rgba(239, 83, 80, 0.56);
  font-style: italic;
}

.token.symbol,
.token.property {
  color: rgb(128, 203, 196);
}

.token.tag,
.token.operator,
.token.keyword {
  color: rgb(127, 219, 202);
}

.token.boolean {
  color: rgb(255, 88, 116);
}

.token.number {
  color: rgb(247, 140, 108);
}

.token.constant,
.token.function,
.token.builtin,
.token.char {
  color: rgb(130, 170, 255);
}

.token.selector,
.token.doctype {
  color: rgb(199, 146, 234);
  font-style: italic;
}

.token.attr-name,
.token.inserted {
  color: rgb(173, 219, 103);
  font-style: italic;
}

.token.string,
.token.url,
.token.entity,
.language-css .token.string,
.style .token.string {
  color: rgb(173, 219, 103);
}

.token.class-name,
.token.atrule,
.token.attr-value {
  color: rgb(255, 203, 139);
}

.token.regex,
.token.important,
.token.variable {
  color: rgb(214, 222, 235);
}

.token.important,
.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}

/* highlight */

.code-highlight {
  float: left; /* 1 */
  min-width: 100%; /* 2 */
}

.code-line {
  display: block;
  padding-left: 16px;
  padding-right: 16px;
  margin-left: -16px;
  margin-right: -16px;
  border-left: 4px solid rgba(0, 0, 0, 0); /* Set placeholder for highlight accent border color to transparent */
}

.code-line.inserted {
  background-color: rgba(16, 185, 129, 0.2); /* Set inserted line (+) color */
}

.code-line.deleted {
  background-color: rgba(239, 68, 68, 0.2); /* Set deleted line (-) color */
}

.highlight-line {
  margin-left: -16px;
  margin-right: -16px;
  background-color: rgba(55, 65, 81, 0.5); /* Set highlight bg color */
  border-left: 4px solid rgb(59, 130, 246); /* Set highlight accent border color */
  position: relative;
}

/* 모바일은? */
/* cursor-pointer 적용해야 하는데, */
.highlight-line:hover::after {
  content: attr(content);
  position: absolute;
  top: 24px;
  z-index: 999;
  background-color: #fff;
  width: fit-content;
  margin-left: 24px;
  color: black;
  padding: 0 8px;
}

.line-number::before {
  display: inline-block;
  width: 1rem;
  text-align: right;
  margin-right: 16px;
  margin-left: -8px;
  color: rgb(156, 163, 175); /* Line number color */
  content: attr(line);
}

/* fancy link */
a {
  text-decoration: none;
  background-image: linear-gradient(90deg, rgb(219 234 254), rgb(23 37 84));
  background-size: 0% 5px;
  background-position: left 1.4rem;
  background-repeat: no-repeat;
  padding-block-end: 0.25em;
  transition: background-size 500ms;
  color: rgb(59 130 246);
}

@media (hover: hover) {
  a:is(:hover, :active) {
    background-size: 100% 5px;
  }
}

@keyframes slideToDown {
  to {
    transform: translateY(30px);
  }
}

@keyframes slideFromTop {
  from {
    transform: translateY(-30px);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
}

@keyframes fadeOut {
  to {
    opacity: 0;
  }
}
